# 
# <https://github.com/KFERMercer/OpenWrt-CI>
#
# Copyright (C) 2019 P3TERX
#
# Copyright (C) 2020 KFERMercer
#
name: my-OpenWrt-CI-complete

on:
  push:
   branches:
     - master

jobs:

  build_openwrt:

    name: Build OpenWrt firmware

    runs-on: ubuntu-latest

    if: github.event.repository.owner.id == github.event.sender.id

    steps:

      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: master

      - name: Space cleanup
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          docker rmi `docker images -q`
          sudo rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d
          sudo -E apt-get -y purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* mysql* php* android*
          sudo -E apt-get update
          sudo -E apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch python3 unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs gcc-multilib g++-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler antlr3 gperf swig
          sudo -E apt-get -y autoremove --purge
          sudo -E apt-get clean
          df -h
      - name: add app
        run: |
          cd package/lean/
          rm -rf luci-theme-argon
          git clone -b 18.06 https://github.com/jerrykuku/luci-theme-argon.git
          git clone --depth=1 https://github.com/jerrykuku/lua-maxminddb.git
          git clone --depth=1 https://github.com/jerrykuku/luci-app-vssr.git
          cd ../
          git clone --depth=1 https://github.com/xiaorouji/openwrt-passwall.git
      - name: Update feeds
        run: |
          sed -i 's/#src-git helloworld/src-git helloworld/g' ./feeds.conf.default
          ./scripts/feeds update -a
          ./scripts/feeds install -a
      - name: Generate configuration file
        run: |
          rm -f ./.config*
          touch ./.config
          cat >> .config <<EOF
          CONFIG_TARGET_x86=y
          CONFIG_TARGET_x86_64=y
          CONFIG_TARGET_x86_64_DEVICE_generic=y
          CONFIG_TARGET_ROOTFS_TARGZ=y
          CONFIG_LIBMBEDTLS_HAVE_SSE2=y
          CONFIG_LIBSODIUM_MINIMAL=y
          CONFIG_PACKAGE_bash=y
          CONFIG_PACKAGE_boost=y
          CONFIG_PACKAGE_boost-date_time=y
          CONFIG_PACKAGE_boost-program_options=y
          CONFIG_PACKAGE_boost-system=y
          CONFIG_PACKAGE_ca-certificates=y
          CONFIG_PACKAGE_chinadns-ng=y
          CONFIG_PACKAGE_coreutils=y
          CONFIG_PACKAGE_coreutils-base64=y
          CONFIG_PACKAGE_coreutils-nohup=y
          CONFIG_PACKAGE_dns2socks=y
          CONFIG_PACKAGE_dnsforwarder=y
          CONFIG_PACKAGE_dnsproxy=y
          CONFIG_PACKAGE_haproxy=y
          CONFIG_PACKAGE_ip-full=y
          CONFIG_PACKAGE_ipt2socks=y
          CONFIG_PACKAGE_iptables-mod-conntrack-extra=y
          CONFIG_PACKAGE_iptables-mod-ipopt=y
          CONFIG_PACKAGE_iptables-mod-tproxy=y
          CONFIG_PACKAGE_kcptun-client=y
          CONFIG_PACKAGE_kmod-gre=y
          CONFIG_PACKAGE_kmod-ip6tables=y
          CONFIG_PACKAGE_kmod-ipt-conntrack-extra=y
          CONFIG_PACKAGE_kmod-ipt-ipopt=y
          CONFIG_PACKAGE_kmod-ipt-tproxy=y
          CONFIG_PACKAGE_kmod-iptunnel=y
          CONFIG_PACKAGE_kmod-nf-ipt6=y
          CONFIG_PACKAGE_kmod-nf-reject6=y
          CONFIG_PACKAGE_libbpf=y
          CONFIG_PACKAGE_libcares=y
          CONFIG_PACKAGE_libelf=y
          CONFIG_PACKAGE_libev=y
          CONFIG_PACKAGE_libltdl=y
          CONFIG_PACKAGE_liblua5.3=y
          CONFIG_PACKAGE_libmaxminddb=y
          CONFIG_PACKAGE_libmbedtls=y
          CONFIG_PACKAGE_libsodium=y
          CONFIG_PACKAGE_libudns=y
          CONFIG_PACKAGE_lua-maxminddb=y
          CONFIG_PACKAGE_luasocket=y
          CONFIG_PACKAGE_luci-app-jd-dailybonus=y
          CONFIG_PACKAGE_luci-app-mwan3=y
          CONFIG_PACKAGE_luci-app-mwan3helper=y
          CONFIG_PACKAGE_luci-app-passwall=y
          CONFIG_PACKAGE_luci-app-passwall_INCLUDE_Kcptun=y
          CONFIG_PACKAGE_luci-app-passwall_INCLUDE_ShadowsocksR_Libev_Server=y
          CONFIG_PACKAGE_luci-app-passwall_INCLUDE_Shadowsocks_Rust_Client=y
          CONFIG_PACKAGE_luci-app-passwall_INCLUDE_Trojan_GO=y
          CONFIG_PACKAGE_luci-app-passwall_INCLUDE_Xray_Plugin=y
          CONFIG_PACKAGE_luci-app-pptp-server=y
          CONFIG_PACKAGE_luci-app-syncdial=y
          CONFIG_PACKAGE_luci-app-turboacc_INCLUDE_DNSFORWARDER=y
          CONFIG_PACKAGE_luci-app-turboacc_INCLUDE_DNSPROXY=y
          CONFIG_PACKAGE_luci-app-vssr=y
          CONFIG_PACKAGE_luci-app-vssr_INCLUDE_Kcptun=y
          # CONFIG_PACKAGE_luci-app-xlnetacc is not set
          # CONFIG_PACKAGE_luci-app-zerotier is not set
          CONFIG_PACKAGE_luci-i18n-mwan3-zh-cn=y
          CONFIG_PACKAGE_luci-i18n-mwan3helper-zh-cn=y
          CONFIG_PACKAGE_luci-i18n-passwall-zh-cn=y
          CONFIG_PACKAGE_luci-i18n-pptp-server-zh-cn=y
          CONFIG_PACKAGE_luci-i18n-vssr-zh-cn=y
          CONFIG_PACKAGE_luci-theme-argon=y
          CONFIG_PACKAGE_microsocks=y
          CONFIG_PACKAGE_mwan3=y
          CONFIG_PACKAGE_pptpd=y
          CONFIG_PACKAGE_resolveip=y
          CONFIG_PACKAGE_shadowsocks-libev-ss-local=y
          CONFIG_PACKAGE_shadowsocks-libev-ss-redir=y
          CONFIG_PACKAGE_shadowsocks-libev-ss-server=y
          CONFIG_PACKAGE_shadowsocks-rust-sslocal=y
          CONFIG_PACKAGE_shadowsocksr-libev-ssr-check=y
          CONFIG_PACKAGE_shadowsocksr-libev-ssr-local=y
          CONFIG_PACKAGE_shadowsocksr-libev-ssr-redir=y
          CONFIG_PACKAGE_shadowsocksr-libev-ssr-server=y
          CONFIG_PACKAGE_simple-obfs=y
          CONFIG_PACKAGE_tcping=y
          CONFIG_PACKAGE_trojan=y
          CONFIG_PACKAGE_trojan-go=y
          CONFIG_PACKAGE_trojan-plus=y
          CONFIG_PACKAGE_unzip=y
          CONFIG_PACKAGE_v2ray-core=y
          CONFIG_PACKAGE_v2ray-plugin=y
          CONFIG_PACKAGE_xray-core=y
          CONFIG_PACKAGE_xray-plugin=y
          CONFIG_TARGET_KERNEL_PARTSIZE=128
          CONFIG_TARGET_ROOTFS_PARTSIZE=320
          CONFIG_TARGET_ROOTFS_TARGZ=y
          CONFIG_TROJAN_GO_COMPRESS_UPX=y
          CONFIG_V2RAY_CORE_COMPRESS_UPX=y
          CONFIG_XRAY_CORE_COMPRESS_UPX=y
          CONFIG_boost-compile-visibility-hidden=y
          CONFIG_boost-runtime-shared=y
          CONFIG_boost-static-and-shared-libs=y
          CONFIG_boost-variant-release=y
          CONFIG_PACKAGE_ip-tiny=y
          CONFIG_PACKAGE_libminiupnpc=y
          CONFIG_PACKAGE_libnatpmp=y
          CONFIG_PACKAGE_zerotier=y
          # CONFIG_ZEROTIER_ENABLE_DEBUG is not set
          # CONFIG_ZEROTIER_ENABLE_SELFTEST is not set
          EOF
          sed -i 's/^[ \t]*//g' ./.config
          make defconfig
      - name: Make download
        run: |
          make download -j8
          find dl -size -1024c -exec rm -f {} \;
      - name: Compile firmware
        run: |
          make -j$(nproc) || make -j1 V=s
          echo "======================="
          echo "Space usage:"
          echo "======================="
          df -h
          echo "======================="
          du -h --max-depth=1 ./ --exclude=build_dir --exclude=bin
          du -h --max-depth=1 ./build_dir
          du -h --max-depth=1 ./bin
      - name: Prepare artifact
        run: |
          mkdir -p ./artifact/firmware
          mkdir -p ./artifact/package
          mkdir -p ./artifact/buildinfo
          rm -rf $(find ./bin/targets/ -type d -name "packages")
          cp -rf $(find ./bin/targets/ -type f) ./artifact/firmware/
          cp -rf $(find ./bin/packages/ -type f -name "*.ipk") ./artifact/package/
          cp -rf $(find ./bin/targets/ -type f -name "*.buildinfo" -o -name "*.manifest") ./artifact/buildinfo/
      - name: Deliver buildinfo
        uses: actions/upload-artifact@v2
        with:
          name: OpenWrt_buildinfo
          path: ./artifact/buildinfo/

      - name: Deliver package
        uses: actions/upload-artifact@v2
        with:
          name: OpenWrt_package
          path: ./artifact/package/

      - name: Deliver firmware
        uses: actions/upload-artifact@v2
        with:
          name: OpenWrt_firmware
          path: ./bin/targets/
  
#       - name: Upload release asset
#         # if: github.event == 'release'
#         uses: svenstaro/upload-release-action@v2
#         with:
#           repo_token: ${{ secrets.GITHUB_TOKEN }}
#           file: ./artifact/firmware/*
#           tag: ${{ github.ref }}
#           file_glob: true
